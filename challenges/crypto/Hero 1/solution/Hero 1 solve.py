#Put a = 1, b as any number

from Crypto.Util.number import inverse, long_to_bytes
from sympy import gcd
from pwn import remote

g = 954829031479655986041232662674983962172384976920920267162898761677703445539191892255732991207261   
n = 688307792946448993198811091377850276997821001106827508978593047341900180997416016821264547620034530045607460301284389671009679329079958178531802931244171900748351966050755657776847055456154954714661283622656178248344972668010058879
ct = 23927635918266138383006394842785131352105866021346578671241926155599774211538075052058642004830147019778973505565494140318013044653988336821495283479285628918780521408918031115880107061500549173733243306770641538934023449023702629163582691068822430308610712020622345599331605021216144795231563422764827654699

y = gcd(ct, n)
q = gcd(g, n)
enc = ct // y
p = n // q // y
e = g // q

phi = (y-1) * (p-1) * (q-1)
d = inverse(e, phi)

flag = long_to_bytes(pow(enc, d, n))
print(flag)